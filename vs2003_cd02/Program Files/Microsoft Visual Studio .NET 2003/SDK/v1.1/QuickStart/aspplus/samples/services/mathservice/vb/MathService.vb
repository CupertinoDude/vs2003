'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=1.1.4322.573.
'
Namespace MathServiceVB
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MathServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Public Class MathService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/quickstart/aspplus/samples/services/MathService/VB/MathService.a"& _ 
"smx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Add", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Add(ByVal A As Single, ByVal B As Single) As Single
            Dim results() As Object = Me.Invoke("Add", New Object() {A, B})
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        Public Function BeginAdd(ByVal A As Single, ByVal B As Single, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Add", New Object() {A, B}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndAdd(ByVal asyncResult As System.IAsyncResult) As Single
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Subtract", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Subtract(ByVal A As Single, ByVal B As Single) As Single
            Dim results() As Object = Me.Invoke("Subtract", New Object() {A, B})
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        Public Function BeginSubtract(ByVal A As Single, ByVal B As Single, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Subtract", New Object() {A, B}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndSubtract(ByVal asyncResult As System.IAsyncResult) As Single
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Multiply", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Multiply(ByVal A As Single, ByVal B As Single) As Single
            Dim results() As Object = Me.Invoke("Multiply", New Object() {A, B})
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        Public Function BeginMultiply(ByVal A As Single, ByVal B As Single, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Multiply", New Object() {A, B}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndMultiply(ByVal asyncResult As System.IAsyncResult) As Single
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Divide", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Divide(ByVal A As Single, ByVal B As Single) As Single
            Dim results() As Object = Me.Invoke("Divide", New Object() {A, B})
            Return CType(results(0),Single)
        End Function
        
        '<remarks/>
        Public Function BeginDivide(ByVal A As Single, ByVal B As Single, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Divide", New Object() {A, B}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndDivide(ByVal asyncResult As System.IAsyncResult) As Single
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Single)
        End Function
    End Class
End Namespace
