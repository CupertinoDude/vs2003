//------------------------------------------------------------------------------
/// <autogenerated>
///     This code was generated by a tool.
///     Runtime Version: 1.1.4322.573
///
///     Changes to this file may cause incorrect behavior and will be lost if 
///     the code is regenerated.
/// </autogenerated>
//------------------------------------------------------------------------------

//@cc_on
//@set @debug(off)

import System.Diagnostics;
import System.Xml.Serialization;
import System;
import System.Web.Services.Protocols;
import System.ComponentModel;
import System.Web.Services;

//
//This source code was auto-generated by wsdl, Version=1.1.4322.573.
//
package MathServiceJS {
    
    ///<remarks/>
    public System.Diagnostics.DebuggerStepThroughAttribute() System.ComponentModel.DesignerCategoryAttribute("code") System.Web.Services.WebServiceBindingAttribute(Name="MathServiceSoap", Namespace="http://tempuri.org/") 
    class MathService extends System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        ///<remarks/>
        public function MathService() {
            this.Url = "http://localhost/quickstart/aspplus/samples/services/MathService/JS/MathService.a" + 
"smx";
            
        }
        
        ///<remarks/>
        public final System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Divide", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped) function Divide(a : float, b : float) : float {
            var results : System.Object[] = this.Invoke("Divide", [a, b]);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final function BeginDivide(a : float, b : float, callback : System.AsyncCallback, asyncState : System.Object) : System.IAsyncResult {
            return this.BeginInvoke("Divide", [a, b], callback, asyncState);
        }
        
        ///<remarks/>
        public final function EndDivide(asyncResult : System.IAsyncResult) : float {
            var results : System.Object[] = this.EndInvoke(asyncResult);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Multiply", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped) function Multiply(a : float, b : float) : float {
            var results : System.Object[] = this.Invoke("Multiply", [a, b]);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final function BeginMultiply(a : float, b : float, callback : System.AsyncCallback, asyncState : System.Object) : System.IAsyncResult {
            return this.BeginInvoke("Multiply", [a, b], callback, asyncState);
        }
        
        ///<remarks/>
        public final function EndMultiply(asyncResult : System.IAsyncResult) : float {
            var results : System.Object[] = this.EndInvoke(asyncResult);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Subtract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped) function Subtract(a : float, b : float) : float {
            var results : System.Object[] = this.Invoke("Subtract", [a, b]);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final function BeginSubtract(a : float, b : float, callback : System.AsyncCallback, asyncState : System.Object) : System.IAsyncResult {
            return this.BeginInvoke("Subtract", [a, b], callback, asyncState);
        }
        
        ///<remarks/>
        public final function EndSubtract(asyncResult : System.IAsyncResult) : float {
            var results : System.Object[] = this.EndInvoke(asyncResult);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Add", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped) function Add(a : float, b : float) : float {
            var results : System.Object[] = this.Invoke("Add", [a, b]);
            return float(results[0]);
        }
        
        ///<remarks/>
        public final function BeginAdd(a : float, b : float, callback : System.AsyncCallback, asyncState : System.Object) : System.IAsyncResult {
            return this.BeginInvoke("Add", [a, b], callback, asyncState);
        }
        
        ///<remarks/>
        public final function EndAdd(asyncResult : System.IAsyncResult) : float {
            var results : System.Object[] = this.EndInvoke(asyncResult);
            return float(results[0]);
        }
    }
}
