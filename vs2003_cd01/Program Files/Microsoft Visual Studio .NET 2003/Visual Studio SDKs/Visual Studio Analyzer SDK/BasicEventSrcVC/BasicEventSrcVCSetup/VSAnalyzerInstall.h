#pragma once
#ifndef VSANALYZERINSTALL_H
#define VSANALYZERINSTALL_H

// Needed for CComPtr
// Also will include crtdbg.h, which is required to use the _ASSERTE() macro. 
#include <atlbase.h>

// These files are required for generating valid GUIDs. 
// Many of the Visual Studio Analyzer SDK interface methods take a GUID as input.
#include <objbase.h>      // Required by initguid.h
#include <initguid.h>      // Ensures that GUIDs are generated by DEFINE_GUID

//Defined to enable the use of UNICODE compliant functions
#define UNICODE

// This file defines ISystemDebugEventInstall 
// Located at "Microsoft Visual Studio .NET\Visual Studio SDKs\Visual Studio Analyzer SDK"
#include "vaevt_i.c"
#include "vaevt.h"         

// Contains constants for system-defined categories and events 
// Located at "Microsoft Visual Studio .NET\Visual Studio SDKs\Visual Studio Analyzer SDK"
#include "Vaids.h"

// {9ABA1EDE-8CFE-4ef6-BFBC-F322486E5583}
DEFINE_GUID(BASIC_EVENT_SOURCE_GUID, 
0x9aba1ede, 0x8cfe, 0x4ef6, 0xbf, 0xbc, 0xf3, 0x22, 0x48, 0x6e, 0x55, 0x83);

// {923CB7A2-7FBA-40f9-9112-F9953C30602F}
DEFINE_GUID(BASIC_CUSTOM_EVENT_GUID, 
0x923cb7a2, 0x7fba, 0x40f9, 0x91, 0x12, 0xf9, 0x95, 0x3c, 0x30, 0x60, 0x2f);

// {57D5EA2B-4EA9-4826-9DEA-DC7797F3D121}
DEFINE_GUID(BASIC_CUSTOM_CATEGORY_GUID, 
0x57d5ea2b, 0x4ea9, 0x4826, 0x9d, 0xea, 0xdc, 0x77, 0x97, 0xf3, 0xd1, 0x21);


class CVSAnalyzerInstall
{
public:
	//constructor
	CVSAnalyzerInstall(void);
	//destructor
	~CVSAnalyzerInstall(void);

	/******************************************************************
	* Purpose:	Checks if the basic event source is registered.
	* Returns:	True if the source is registered and False otherwise
	*******************************************************************/
	bool IsRegistered();

	/******************************************************************
	* Purpose:	Registers the basic event source with VS Analyzer.
	* Returns:	Nothing.
	*******************************************************************/	
	void RegisterBasicSource(void);

	/******************************************************************
	* Purpose:	Unregisters the basic event source from VS Analyzer, 
	*			which will automatically unregister the custom event. 
	* Returns:  Nothing
	*******************************************************************/
	void UnRegisterBasicSource(void);

	
	/******************************************************************
	* Purpose:	Registers the custom category under which the custom 
	*			event will be registered. Make sure the category is 
	*			registered before you register the event. Also, the 
	*			category CANNOT be a subcategory of the root one, which
	*			has the GUID_NULL as identifier. It MUST be a subcategory
	*			of the DEBUG_EVENT_CATEGORY_ALL or 
	*			DEBUG_EVENT_CATEGORY_MEASURED_ALL.
	* Returns:  Nothing
	*******************************************************************/
	void RegisterCustomCategory(void);
	
	/******************************************************************
	* Purpose:	Registers the custom event that would be fired 
	*			by the Advanced Event Source. It must be called after
	*			the custom event category is registered, because the 
	*			event will be registered in that category.
	* Returns:  Nothing
	*******************************************************************/
	void RegisterCustomEvent(void);

private:
	//pointer to the Event Source Installer
	CComPtr<ISystemDebugEventInstall> m_pESI;	
};

#endif //VSANALYZERINSTALL_H
