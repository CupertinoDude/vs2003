<?xml version="1.0" encoding="utf-8"?><root xmlns:dt="urn:schemas-microsoft-com:datatypes" xmlns:d2="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"><?xml-stylesheet type="text/xsl" href="..\..\..\..\readme.xsl"?><HTML><HEAD><TITLE> Remoting Custom Proxies</TITLE><STYLE>
    .Title{FONT-FAMILY: Verdana;FONT-SIZE: large;COLOR: #808080}
    </STYLE><STYLE>
    .Heading{FONT-FAMILY: Verdana;FONT-SIZE: large}
    </STYLE><STYLE>
    .SectionBreak{FONT-SIZE: small;MARGIN-BOTTOM: 2em}
    </STYLE><STYLE>
    .SmallBreak{FONT-SIZE: small;MARGIN-BOTTOM: 1.5em}
    </STYLE><STYLE>
    .Text{FONT-FAMILY: Verdana;FONT-SIZE: x-small}
    </STYLE><STYLE>
    .FixedHeading{FONT-FAMILY: Verdana;FONT-SIZE: x-small}
    </STYLE><STYLE>
    .FixedText{MARGIN-LEFT: 3ex;FONT-FAMILY: Lucida Console;FONT-SIZE: x-small;FONT-WEIGHT: Bold}
    </STYLE><STYLE>
    .ListSansBullets {list-style-type: none;FONT-FAMILY: Verdana;FONT-SIZE: x-small}
    </STYLE></HEAD><BODY><table><tr><td><h2 class="Title"> Remoting Custom Proxies</h2></td><td valign="baseline" class="Text">
               
              
                  (Console Application)
                </td></tr></table><p class="Text">
    This document contains the release information for the .NET Framework Building and using your own custom proxies sample. You will find the following sections below: 
    </p><ul class="Text"><li><a href="#_Sample_Overview">Overview</a></li><li><a HREF="#Registering the service in IIS">Registering the service in IIS</a></li><li><a HREF="#Requirements">Requirements</a></li><li><a href="#_Location_of_Sample">Location</a></li><li><a href="#_Building_the_Sample">Building the sample</a></li><li><a href="#_Running_the_Sample">Running the sample</a></li><li><a href="#_sdkvars">Notes</a></li></ul><p class="SectionBreak" /><h4 class="Heading"><a name="_Sample_Overview" />
    Overview
    </h4><p class="Text"> 
This sample contains 3 different executables that demonstrate the extensibility
of the RealProxy class.  By extending RealProxy, user code gains access to the
messages that will be transported to and from any remote object.  The executable,
ProxyWiredToHttpChannel.exe shows how to intercept and forward the call to
the RemotingHello service in the Remoting/Basic directory using the Http Channel.
</p><p class="SectionBreak" /><p class="SectionBreak" /><h4 class="Heading"><a name="#Registering the service in IIS"></a>Registering the service in IIS</h4><span class="Text"><p class="Text"><li>Compile the service to a DLL and copy this DLL to a bin directory
where the service will be loaded from.  For this sample we create
the bin subdirectory under RemotingHello and copy Hello.dll there. Building the sample by running nmake will accomplish this. </li><p></p><li>Start Internet Services Manager and select Default Web Site
under the server node.  Select Action, New, Virtual Directory on the
menu and click Next to continue.</li><p></p><li>Enter RemotingHello as the alias and press Next.</li><p></p><li>Enter the directory where the service is located.  Enter the full
path up to but excluding the bin directory where the dll in step 1
was copied to.  For example:<p></p> 

  C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\Remoting\Basic\RemotingHello<p></p></li><li>Press Next.  Accept the defaults presented and press Next again.  Press Finish.  The service
has now been registered and will appear under the list of Default Web Sites in the Internet Services
Manager window.</li><p></p><li>Check that there is web.config file in the directory where the service was registered.  This
file describes our service and will automatically be loaded when a client attempts to access our
service with a browser or client using the HTTP channel on port 80.</li></p></span><p class="SectionBreak" /><h4 class="Heading"><a name="#Requirements"></a>Requirements</h4><span class="Text"><p class="Text">
This sample will only operate correctly on any version of Windows with the Common Language Runtime and Internet Information Server (IIS) installed.  
</p></span><p class="SectionBreak" /><h4 class="Heading"><a name="_Location_of_Sample" />
    Location
    </h4><p class="Text">
    This sample is located in the <a href="." title="Jump to Folder" target="_blank">Technologies\Remoting\Advanced\CustomProxies
</a> subdirectory of the .NET Framework SDK samples directory.
    </p><p class="FixedHeading">
    For Example:
      <p class="FixedText">
      C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\Remoting\Advanced\CustomProxies
</p></p><p class="SectionBreak" /><h4 class="Heading"><a name="_Building_the_Sample" />
    Building the Sample
    </h4><p class="Text">
    In order to properly build and run this sample, the following steps need to be performed.
    </p><p class="Text"><p class="FixedHeading">
  For Example:
  </p><p class="FixedText"> 
C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\Remoting\Advanced\CustomProxies&gt; nmake -a all
</p></p><p class="SectionBreak" /><h4 class="Heading"><a name="_Running_the_Sample" />
    Running the Sample
    </h4><p class="Text">
    In order to run this sample, follow the instructions listed below.
    </p><span class="Text"><ul class="Text"><li>
This sample contains 3 executables.  They are, ProxyWiredToHttpChannel.exe, 
ProxyWithCustomCasting.exe and ProxyWithReturnMessage.exe.
Run these executables from a console window.  Please ensure that the RemotingHello
service is registered with IIS as described above before running 
ProxyWiredToHttpChannel.exe
</li></ul></span><p class="SectionBreak" /><h4 class="Heading"><a name="_sdkvars" />
    Notes
    </h4><p class="Text">
    For the .Net Framework samples to function properly, your Path, Include, and Lib environment variables must be set correctly. 
    In many cases, the SDK install program updates these environment variables for you. However, if you installed the .Net Framework SDK 
    using Visual Studio .NET, or unselected "register environment variables" during setup, these environment variables will not be updated. 
    You can set the Path, Include and Lib environment variables by running SDKVars.bat, located in the <i>&lt;SDKRoot&gt;\Bin</i> directory. 
    SDKVars.bat must be executed in every command shell.
    </p></BODY></HTML></root>