<?xml version='1.0'?> 
<?xml-stylesheet type="text/xsl" href="..\..\..\..\readme.xsl"?> 
<sample> 
<title> Remoting Custom Proxies</title>

<title-short>Building and using your own custom proxies</title-short>

<overview> 
This sample contains 3 different executables that demonstrate the extensibility
of the RealProxy class.  By extending RealProxy, user code gains access to the
messages that will be transported to and from any remote object.  The executable,
ProxyWiredToHttpChannel.exe shows how to intercept and forward the call to
the RemotingHello service in the Remoting/Basic directory using the Http Channel.
</overview>

<subdirectory>Technologies\Remoting\Advanced\CustomProxies
</subdirectory>

<customsection  name = "Registering the service in IIS">
<li>Compile the service to a DLL and copy this DLL to a bin directory
where the service will be loaded from.  For this sample we create
the bin subdirectory under RemotingHello and copy Hello.dll there. Building the sample by running nmake will accomplish this. </li><p></p>

<li>Start Internet Services Manager and select Default Web Site
under the server node.  Select Action, New, Virtual Directory on the
menu and click Next to continue.</li><p></p> 

<li>Enter RemotingHello as the alias and press Next.</li><p></p> 

<li>Enter the directory where the service is located.  Enter the full
path up to but excluding the bin directory where the dll in step 1
was copied to.  For example:<p></p> 

  C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\Remoting\Basic\RemotingHello<p></p> </li>

<li>Press Next.  Accept the defaults presented and press Next again.  Press Finish.  The service
has now been registered and will appear under the list of Default Web Sites in the Internet Services
Manager window.</li><p></p> 

<li>Check that there is web.config file in the directory where the service was registered.  This
file describes our service and will automatically be loaded when a client attempts to access our
service with a browser or client using the HTTP channel on port 80.</li>
</customsection>

<customsection  name = "Requirements">
This sample will only operate correctly on any version of Windows with the Common Language Runtime and Internet Information Server (IIS) installed.  
</customsection>

<buildsteps> 
<step> 
<example> 
C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\Remoting\Advanced\CustomProxies> nmake -a all
</example>
</step>
</buildsteps>

<runsteps> 
<step>
This sample contains 3 executables.  They are, ProxyWiredToHttpChannel.exe, 
ProxyWithCustomCasting.exe and ProxyWithReturnMessage.exe.
Run these executables from a console window.  Please ensure that the RemotingHello
service is registered with IIS as described above before running 
ProxyWiredToHttpChannel.exe
</step>
</runsteps>

<keywords> 
<word name="Remoting" keyword="R"/>
<word name="Collections" keyword="C"/>
<word name="MBR" keyword="M"/>
</keywords>
</sample>


