<?xml version='1.0'?> 
<?xml-stylesheet type="text/xsl" href="..\..\..\..\readme.xsl"?> 
<sample> 
<title>Remoting Events Sample</title>

<title-short>Using Events with .NET remoting</title-short>

<overview> 
This sample shows how to use events in .NET Remoting.  We host two remote objects
using two different console applications.  One of these remote objects, Waz, exposes
a method called HelloMethod that clients can call.  When this method is called, it
checks if any event handlers have been registered and then fires an event on the 
handler.  The other object, Baz, exposes a method called GreetingHandler that
will be called when the event is fired. This sample also has two clients, one in RemotingEvents/Client and one in RemotingEvents/EventRegistration.  The client in the Client directory activates a remote Waz object and calls the HelloMethod a few times.  Since no handlers have been registered with Waz, no events will be fired.  The client in RemotingEvents/EventRegistration activates 2 remote objects, a Waz as well as a Baz.  It registers a GreetingEvent handler with Waz, providing the GreetingHandler method on the Baz object as the callback.  When the client now calls the HelloMethod on Waz, an event is fired and the handler on Baz will be called.  You should see Baz printing a message from the greeting handler in its console window and Waz printing a notice that the event was fired. 

</overview>

<subdirectory>Technologies\Remoting\Basic\RemotingEvents

<directory name = "EventFire">
The source code for the host, Waz and the associated makefile are stored here.  This service can be started by running EventFireHost.exe.
</directory>

<directory name = "Client">
The source code for the first client and associated makefile are stored here.
</directory>

<directory name = "EventSink">
The source code for the host and event handler (in the class Baz) as well as the 
associated makefile are stored here.  The service can be started by running 
EventSinkHost.exe.
</directory>

<directory name = "EventRegistration">
The source file as well as the associated makefile for this client are stored here.
</directory>
</subdirectory>

<buildsteps> 
<step> 
Type <b>nmake -a all</b> from the command line in the RemotingEvents directory.

<example> 
C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\Remoting\Basic\RemotingEvents> nmake -a all
</example>
</step>
</buildsteps>

<runsteps> 
<step>
Start the EventFire host by running EventFireHost.exe from the EventFire directory.
Run the client by executing Client.exe in the Client directory.
</step>
<step>
Start the EventSink host by running EventSinkHost.exe from the EventSink directory.  
Ensure that the EventFire host is running as well.  Run the client by executing
EventRegistration.exe in the EventRegistration directory.
</step>
</runsteps>

<keywords> 
<word name="Remoting" keyword="R"/>
<word name="Events" keyword="E"/>
<word name="MBR" keyword="M"/>
</keywords>
</sample>




