<?xml version='1.0'?>
<?xml-stylesheet type="text/xsl" href="..\..\readme.xsl"?>

<sample>
<title>Microsoft Intermediate Language Sample</title>
<title-short>MSIL</title-short>
<overview>
This sample demonstrates the use of ILDasm and ILAsm to "round-trip" an existing assembly. It is possible to run ILDasm on an existing managed executable to create compileable (and modifiable) MSIL. Then, ILAsm can be used to compile the MSIL source code.
</overview>
<subdirectory>Technologies\IL</subdirectory>
<buildsteps>
   <step>
      Type <richcontent bold="T">BUILD.bat</richcontent>
      <richcontent> from the command line.</richcontent>      
      <example>
         C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\IL>Build.bat
      </example>
   </step>
</buildsteps>
<runsteps>
   <step>
      Type <richcontent bold="T">Roundtrip.bat [FileName]</richcontent><richcontent> from the command line, where [FileName] is the name of a managed executable.</richcontent>
      <example>
         C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\IL>RoundTrip.bat Simple.exe
      </example>
      <example>
         C:\Program Files\Microsoft.NET\SDK\v1.1\Samples\Technologies\IL>RoundTrip.bat ..\Threading\JoinThread\CS\JoinThread.exe
      </example>
      <p>Note: It would be necessary to build the <i>JoinThread</i> sample first before attempting to execute the previous usage example.</p>
   </step>   
   <step>
      Roundtrip.bat produces two files of interest: RTAsm.il which contains the generated MSIL source code, and RTExe.exe which is a new managed exe built from the RTAsm.il sources.
   </step>   
</runsteps>
<keywords>
   <word name="Intermediate Language" keyword="T"/>
   <word name="ILDasm.exe" keyword="T"/>
   <word name="IlAsm.exe" keyword="T"/>
</keywords>
</sample>

